/*
 * This file is generated by jOOQ.
 */
package com.leadsquared.employeemanagement.jooq;


import com.leadsquared.employeemanagement.jooq.tables.Department;
import com.leadsquared.employeemanagement.jooq.tables.Employee;
import com.leadsquared.employeemanagement.jooq.tables.Phone;
import com.leadsquared.employeemanagement.jooq.tables.Project;
import com.leadsquared.employeemanagement.jooq.tables.Temp;
import com.leadsquared.employeemanagement.jooq.tables.records.DepartmentRecord;
import com.leadsquared.employeemanagement.jooq.tables.records.EmployeeRecord;
import com.leadsquared.employeemanagement.jooq.tables.records.PhoneRecord;
import com.leadsquared.employeemanagement.jooq.tables.records.ProjectRecord;
import com.leadsquared.employeemanagement.jooq.tables.records.TempRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DepartmentRecord> KEY_DEPARTMENT_DEPARTMENT_ID = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("KEY_department_department_id"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<DepartmentRecord> KEY_DEPARTMENT_PRIMARY = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("KEY_department_PRIMARY"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<EmployeeRecord> KEY_EMPLOYEE_EMPLOYEE_ID = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("KEY_employee_employee_id"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final UniqueKey<EmployeeRecord> KEY_EMPLOYEE_PRIMARY = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("KEY_employee_PRIMARY"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_ID }, true);
    public static final UniqueKey<PhoneRecord> KEY_PHONE_PHONE_ID = Internal.createUniqueKey(Phone.PHONE, DSL.name("KEY_phone_phone_id"), new TableField[] { Phone.PHONE.PHONE_ID }, true);
    public static final UniqueKey<PhoneRecord> KEY_PHONE_PRIMARY = Internal.createUniqueKey(Phone.PHONE, DSL.name("KEY_phone_PRIMARY"), new TableField[] { Phone.PHONE.PHONE_ID }, true);
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = Internal.createUniqueKey(Project.PROJECT, DSL.name("KEY_project_PRIMARY"), new TableField[] { Project.PROJECT.PROJECT_ID }, true);
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_PROJECT_ID = Internal.createUniqueKey(Project.PROJECT, DSL.name("KEY_project_project_id"), new TableField[] { Project.PROJECT.PROJECT_ID }, true);
    public static final UniqueKey<TempRecord> KEY_TEMP_CODE = Internal.createUniqueKey(Temp.TEMP, DSL.name("KEY_temp_code"), new TableField[] { Temp.TEMP.CODE }, true);
    public static final UniqueKey<TempRecord> KEY_TEMP_PRIMARY = Internal.createUniqueKey(Temp.TEMP, DSL.name("KEY_temp_PRIMARY"), new TableField[] { Temp.TEMP.ID }, true);
}
