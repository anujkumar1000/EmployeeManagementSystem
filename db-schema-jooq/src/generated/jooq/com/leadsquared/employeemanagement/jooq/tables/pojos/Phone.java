/*
 * This file is generated by jOOQ.
 */
package com.leadsquared.employeemanagement.jooq.tables.pojos;


import com.leadsquared.employeemanagement.jooq.enums.PhonePhoneType;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Phone implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long phoneId;
    private Long phoneNumber;
    private PhonePhoneType phoneType;
    private Byte isPrimary;
    private Long departmentId;
    private Long projectId;
    private Long employeeId;

    public Phone() {}

    public Phone(Phone value) {
        this.phoneId = value.phoneId;
        this.phoneNumber = value.phoneNumber;
        this.phoneType = value.phoneType;
        this.isPrimary = value.isPrimary;
        this.departmentId = value.departmentId;
        this.projectId = value.projectId;
        this.employeeId = value.employeeId;
    }

    public Phone(
        Long phoneId,
        Long phoneNumber,
        PhonePhoneType phoneType,
        Byte isPrimary,
        Long departmentId,
        Long projectId,
        Long employeeId
    ) {
        this.phoneId = phoneId;
        this.phoneNumber = phoneNumber;
        this.phoneType = phoneType;
        this.isPrimary = isPrimary;
        this.departmentId = departmentId;
        this.projectId = projectId;
        this.employeeId = employeeId;
    }

    /**
     * Getter for <code>phone.phone_id</code>.
     */
    public Long getPhoneId() {
        return this.phoneId;
    }

    /**
     * Setter for <code>phone.phone_id</code>.
     */
    public Phone setPhoneId(Long phoneId) {
        this.phoneId = phoneId;
        return this;
    }

    /**
     * Getter for <code>phone.phone_number</code>.
     */
    public Long getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Setter for <code>phone.phone_number</code>.
     */
    public Phone setPhoneNumber(Long phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * Getter for <code>phone.phone_type</code>.
     */
    public PhonePhoneType getPhoneType() {
        return this.phoneType;
    }

    /**
     * Setter for <code>phone.phone_type</code>.
     */
    public Phone setPhoneType(PhonePhoneType phoneType) {
        this.phoneType = phoneType;
        return this;
    }

    /**
     * Getter for <code>phone.is_primary</code>.
     */
    public Byte getIsPrimary() {
        return this.isPrimary;
    }

    /**
     * Setter for <code>phone.is_primary</code>.
     */
    public Phone setIsPrimary(Byte isPrimary) {
        this.isPrimary = isPrimary;
        return this;
    }

    /**
     * Getter for <code>phone.department_id</code>.
     */
    public Long getDepartmentId() {
        return this.departmentId;
    }

    /**
     * Setter for <code>phone.department_id</code>.
     */
    public Phone setDepartmentId(Long departmentId) {
        this.departmentId = departmentId;
        return this;
    }

    /**
     * Getter for <code>phone.project_id</code>.
     */
    public Long getProjectId() {
        return this.projectId;
    }

    /**
     * Setter for <code>phone.project_id</code>.
     */
    public Phone setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Getter for <code>phone.employee_id</code>.
     */
    public Long getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Setter for <code>phone.employee_id</code>.
     */
    public Phone setEmployeeId(Long employeeId) {
        this.employeeId = employeeId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Phone other = (Phone) obj;
        if (this.phoneId == null) {
            if (other.phoneId != null)
                return false;
        }
        else if (!this.phoneId.equals(other.phoneId))
            return false;
        if (this.phoneNumber == null) {
            if (other.phoneNumber != null)
                return false;
        }
        else if (!this.phoneNumber.equals(other.phoneNumber))
            return false;
        if (this.phoneType == null) {
            if (other.phoneType != null)
                return false;
        }
        else if (!this.phoneType.equals(other.phoneType))
            return false;
        if (this.isPrimary == null) {
            if (other.isPrimary != null)
                return false;
        }
        else if (!this.isPrimary.equals(other.isPrimary))
            return false;
        if (this.departmentId == null) {
            if (other.departmentId != null)
                return false;
        }
        else if (!this.departmentId.equals(other.departmentId))
            return false;
        if (this.projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!this.projectId.equals(other.projectId))
            return false;
        if (this.employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!this.employeeId.equals(other.employeeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.phoneId == null) ? 0 : this.phoneId.hashCode());
        result = prime * result + ((this.phoneNumber == null) ? 0 : this.phoneNumber.hashCode());
        result = prime * result + ((this.phoneType == null) ? 0 : this.phoneType.hashCode());
        result = prime * result + ((this.isPrimary == null) ? 0 : this.isPrimary.hashCode());
        result = prime * result + ((this.departmentId == null) ? 0 : this.departmentId.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Phone (");

        sb.append(phoneId);
        sb.append(", ").append(phoneNumber);
        sb.append(", ").append(phoneType);
        sb.append(", ").append(isPrimary);
        sb.append(", ").append(departmentId);
        sb.append(", ").append(projectId);
        sb.append(", ").append(employeeId);

        sb.append(")");
        return sb.toString();
    }
}
