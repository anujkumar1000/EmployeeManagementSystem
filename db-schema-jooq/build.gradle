buildscript {
	dependencies {
		classpath "org.flywaydb:flyway-mysql:$flywayVersion"
	}
}

plugins {
	id 'java'

	id 'org.flywaydb.flyway' version "$flywayVersion"
	id 'nu.studer.jooq' version '9.0'

	id 'com.github.ben-manes.versions' version "$benmanesVersion"
	id 'project-report'
}

repositories {
	mavenCentral()
}

configurations {
	flywayMigration
}

sourceSets.main.java.srcDirs = ['src/generated/jooq']

dependencies {
	flywayMigration "com.mysql:mysql-connector-j:$mysqlVersion"

	jooqGenerator "com.mysql:mysql-connector-j:$mysqlVersion"
}

java {
	sourceCompatibility = JavaVersion.toVersion("$javaSourceVersion")
	targetCompatibility = JavaVersion.toVersion("$jdkVersion")
}

// at present flyway does not support reactive db drivers
// https://github.com/flyway/flyway/issues/2502
flyway {
	configurations = ['flywayMigration']
	driver = 'com.mysql.cj.jdbc.Driver'
//	url = System.getenv('EM_FW_JDBC_URL') ?: 'jdbc:mysql://127.0.0.1:3306/employeemgt_jooq'
	url = System.getenv('EM_FW_JDBC_URL') ?: 'jdbc:mysql://127.0.0.1:3306/leadsquared'
//	user = System.getenv('EM_FW_JDBC_USERNAME') ?: 'override-EM_FW_JDBC_USERNAME'
	user = System.getenv('EM_FW_JDBC_USERNAME') ?: 'root'
//	password = System.getenv('EM_FW_JDBC_PASSWORD') ?: 'override-EM_FW_JDBC_PASSWORD'
	password = System.getenv('EM_FW_JDBC_PASSWORD') ?: 'rootpass'
//	schemas = [System.getenv('EM_FW_SCHEMAS') ?: 'employeemgt_jooq']
	schemas = [System.getenv('EM_FW_SCHEMAS') ?: 'leadsquared']
	locations = ['classpath:db/migration']
}

flywayMigrate.dependsOn classes

// at present jooq code generation does not support reactive db drivers
// https://stackoverflow.com/a/70804429
jooq {
	version = "$jooqVersion"
	edition = nu.studer.gradle.jooq.JooqEdition.OSS  // default (can be omitted)
	configurations {
		main {  // name of the jOOQ configuration
			generateSchemaSourceOnCompilation = false  // default (can be omitted)

			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
//					url = System.getenv('EM_FW_JDBC_URL') ?: 'jdbc:mysql://127.0.0.1:3306/employeemgt_jooq'
					url = System.getenv('EM_FW_JDBC_URL') ?: 'jdbc:mysql://127.0.0.1:3306/leadsquared'
//					user = System.getenv('EM_FW_JDBC_USERNAME') ?: 'override-EM_FW_JDBC_USERNAME'
					user = System.getenv('EM_FW_JDBC_USERNAME') ?: 'root'
//					password = System.getenv('EM_FW_JDBC_PASSWORD') ?: 'override-EM_FW_JDBC_PASSWORD'
					password = System.getenv('EM_FW_JDBC_PASSWORD') ?: 'rootpass'
					properties {
						property {
							key = 'ssl'
							value = System.getenv('EM_FW_SSL') ?: 'false'
						}
					}
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
//						inputSchema = 'employeemgt_jooq'
						inputSchema = 'leadsquared'
						outputSchemaToDefault = true
						excludes = '''
							flyway_schema_history
						'''
						forcedTypes {
							forcedType {
								name = 'varchar'
								includeExpression = '.*'
								includeTypes = 'INET'
							}
						}
					}
					generate {
						deprecated = true
						records = true
						pojos = true
						immutablePojos = false
						fluentSetters = true
					}
					target {
						packageName = 'com.leadsquared.employeemanagement.jooq'
						directory = 'src/generated/jooq'
					}
					strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				}
			}
		}
	}
}

tasks.named('generateJooq').configure {
	// ensure database schema has been prepared by Flyway before generating the jOOQ sources
	dependsOn tasks.named('flywayMigrate')

	// declare Flyway migration scripts as inputs on the jOOQ task
	inputs.files(fileTree('src/main/resources/db/migration'))
		.withPropertyName('migrations')
		.withPathSensitivity(PathSensitivity.RELATIVE)

	// make jOOQ task participate in incremental builds (and build caching)
	allInputsDeclared = true
}